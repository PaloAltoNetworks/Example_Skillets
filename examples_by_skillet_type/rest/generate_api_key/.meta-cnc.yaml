name: generate_api_key
# label used for menu selection
label: Generate PAN-OS API Key

description: |
  This skillet demonstrates a simple REST api call to a PAN-OS NGFW to generate a new API Key. This key will
  then be stored in your session for future use by other skillets that require the 'api_key' variable.

# type of skillet (panos or panorama or template or terraform)
type: rest

# more complex skillets may express a dependency on another skillet that should be loaded before this one.
# For example, a set of skillets may build off of a single 'golden config' that contains shared configuration
# As this skillet is very simple, there is no need to build on another one.
extends:

# Labels allow grouping and type specific options and are generally only used in advanced cases
labels:
  collection:
    - Example Skillets

# variables define the things an operator may customize in this skillet. Things like DNS servers, NTP addresses, etc
# may be customized for each deployment. Each variable will be rendered as a form field in the panhandler application
variables:
  - name: TARGET_IP
    description: Host
    default: 127.0.0.1
    type_hint: fqdn_or_ip
  - name: TARGET_USERNAME
    description: Username
    default: admin
    type_hint: text
  - name: TARGET_PASSWORD
    description: Password
    default: admin
    type_hint: password


# Snippets is an ordered list of configuration xml fragments that will be pushed to the PAN-OS NGFW. The xpath
# determines where in the configuration heirarchy the xml fragment will be set. 'file' indicates the name of the file
# to load and parse. Jinja2 style variables will be variable interpolated using the values of the 'variables' defined
# in the 'variables' section.
snippets:
  - name: key_gen
    path: https://{{ TARGET_IP }}/api/?type=keygen&user={{ TARGET_USERNAME }}&password={{ TARGET_PASSWORD }}
    # this should output capturing which will set a variable called 'api_key' in the workflow, which can be referenced
    # in a skillet called after this one, any variable with a name called api_key will be prepopulated with the
    # value that is captured from the output of this xml api command
    output_type: xml
    outputs:
      - name: api_key
        capture_pattern: result/key